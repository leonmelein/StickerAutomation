# This is a basic workflow to help you get started with Actions
name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ release ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: semver
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          #change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          namespace: StickerAutomation
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: true

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Run tests
        run: python test.py
      
      - name: Build sticker packs
        run: python build.py
      
      #  Publish your built sticker packs!
      #  You can use the example below to create a Github release that puts a tag on your release branch and pushes the packs to a Github Release

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.semver.outputs.version_tag }}
      #     release_name: Release ${{ steps.semver.outputs.version }}
      #     body: |
      #       ${{ steps.Changelog.outputs.changelog }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Assets
      #   id: upload-release-assets
      #   uses: dwenegar/upload-release-assets@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     release_id: ${{ steps.create_release.outputs.id }}
      #     assets_path: release/
